{"version":3,"sources":["webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./node_modules/lunr/lunr.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/react-lunr/dist/react-lunr.esm.js","webpack:///./src/components/accordion.js","webpack:///./src/pages/index.js"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","createContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","GenIcon","data","props","createElement","IconBase","Tree2Element","tree","map","node","tag","key","child","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","version","utils","warn","message","console","asString","obj","toString","clone","create","keys","val","Array","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","fieldRef","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","push","concat","idf","posting","documentCount","documentsWithTerm","x","Math","log","abs","Token","str","metadata","update","fn","tokenizer","toLowerCase","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","result","k","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","rawIndex","rawStore","JSON","condition","invariant","store","Accordion","seccion","articulos","alwaysOpen","isOpen","setOpen","useState","useEffect","React","onClick","FaArrowDown","IndexPage","localSearchArticulos","indice","secciones_desc","capitulos_desc","secc_articulos","_toConsumableArray","nodes","NRO_SECCION","DESC_SECCION","arts","filter","NRO_CAPITULO","DESC_CAPITULO","cap","captitulos","cant_articulos","setQuery","querySinAcento","setQuerySinAcento","useLunr","results_array","numeroArticulo","Layout","SEO","placeholder","value","onChange","event","target","normalize","_ref2","secciones_filtradas","art","includes","NRO_ARTICULO","capitulo","capitulos_filtrados","Link","to","DESC_ARTICULO"],"mappings":"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","file":"component---src-pages-index-js-4c992d5b3983ac422786.js","sourcesContent":["export var IconsManifest = [{\n  \"id\": \"ci\",\n  \"name\": \"Circum Icons\",\n  \"projectUrl\": \"https://circumicons.com/\",\n  \"license\": \"MPL-2.0 license\",\n  \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n}, {\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome 5\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"fa6\",\n  \"name\": \"Font Awesome 6\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons 4\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"io5\",\n  \"name\": \"Ionicons 5\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"lu\",\n  \"name\": \"Lucide\",\n  \"projectUrl\": \"https://lucide.dev/\",\n  \"license\": \"ISC\",\n  \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"hi2\",\n  \"name\": \"Heroicons 2\",\n  \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"sl\",\n  \"name\": \"Simple Line Icons\",\n  \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"tb\",\n  \"name\": \"Tabler Icons\",\n  \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"tfi\",\n  \"name\": \"Themify Icons\",\n  \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n}, {\n  \"id\": \"rx\",\n  \"name\": \"Radix Icons\",\n  \"projectUrl\": \"https://icons.radix-ui.com\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"pi\",\n  \"name\": \"Phosphor Icons\",\n  \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n}, {\n  \"id\": \"lia\",\n  \"name\": \"Icons8 Line Awesome\",\n  \"projectUrl\": \"https://icons8.com/line-awesome\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n}];","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;\n(function () {\n  /**\n   * A convenience function for configuring and constructing\n   * a new lunr Index.\n   *\n   * A lunr.Builder instance is created and the pipeline setup\n   * with a trimmer, stop word filter and stemmer.\n   *\n   * This builder object is yielded to the configuration function\n   * that is passed as a parameter, allowing the list of fields\n   * and other builder parameters to be customised.\n   *\n   * All documents _must_ be added within the passed config function.\n   *\n   * @example\n   * var idx = lunr(function () {\n   *   this.field('title')\n   *   this.field('body')\n   *   this.ref('id')\n   *\n   *   documents.forEach(function (doc) {\n   *     this.add(doc)\n   *   }, this)\n   * })\n   *\n   * @see {@link lunr.Builder}\n   * @see {@link lunr.Pipeline}\n   * @see {@link lunr.trimmer}\n   * @see {@link lunr.stopWordFilter}\n   * @see {@link lunr.stemmer}\n   * @namespace {function} lunr\n   */\n  var lunr = function (config) {\n    var builder = new lunr.Builder();\n    builder.pipeline.add(lunr.trimmer, lunr.stopWordFilter, lunr.stemmer);\n    builder.searchPipeline.add(lunr.stemmer);\n    config.call(builder, builder);\n    return builder.build();\n  };\n  lunr.version = \"2.3.9\";\n  /*!\n   * lunr.utils\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A namespace containing utils for the rest of the lunr library\n   * @namespace lunr.utils\n   */\n  lunr.utils = {};\n\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf lunr.utils\n   * @function\n   */\n  lunr.utils.warn = function (global) {\n    /* eslint-disable no-console */\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n    /* eslint-enable no-console */\n  }(this);\n\n  /**\n   * Convert an object to a string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * the empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {Any} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf lunr.utils\n   */\n  lunr.utils.asString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    } else {\n      return obj.toString();\n    }\n  };\n\n  /**\n   * Clones an object.\n   *\n   * Will create a copy of an existing object such that any mutations\n   * on the copy cannot affect the original.\n   *\n   * Only shallow objects are supported, passing a nested object to this\n   * function will cause a TypeError.\n   *\n   * Objects with primitives, and arrays of primitives are supported.\n   *\n   * @param {Object} obj The object to clone.\n   * @return {Object} a clone of the passed object.\n   * @throws {TypeError} when a nested object is passed.\n   * @memberOf Utils\n   */\n  lunr.utils.clone = function (obj) {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n    var clone = Object.create(null),\n      keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i],\n        val = obj[key];\n      if (Array.isArray(val)) {\n        clone[key] = val.slice();\n        continue;\n      }\n      if (typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean') {\n        clone[key] = val;\n        continue;\n      }\n      throw new TypeError(\"clone is not deep and does not support nested objects\");\n    }\n    return clone;\n  };\n  lunr.FieldRef = function (docRef, fieldName, stringValue) {\n    this.docRef = docRef;\n    this.fieldName = fieldName;\n    this._stringValue = stringValue;\n  };\n  lunr.FieldRef.joiner = \"/\";\n  lunr.FieldRef.fromString = function (s) {\n    var n = s.indexOf(lunr.FieldRef.joiner);\n    if (n === -1) {\n      throw \"malformed field ref string\";\n    }\n    var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1);\n    return new lunr.FieldRef(docRef, fieldRef, s);\n  };\n  lunr.FieldRef.prototype.toString = function () {\n    if (this._stringValue == undefined) {\n      this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef;\n    }\n    return this._stringValue;\n  };\n  /*!\n   * lunr.Set\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A lunr set.\n   *\n   * @constructor\n   */\n  lunr.Set = function (elements) {\n    this.elements = Object.create(null);\n    if (elements) {\n      this.length = elements.length;\n      for (var i = 0; i < this.length; i++) {\n        this.elements[elements[i]] = true;\n      }\n    } else {\n      this.length = 0;\n    }\n  };\n\n  /**\n   * A complete set that contains all elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n  lunr.Set.complete = {\n    intersect: function (other) {\n      return other;\n    },\n    union: function () {\n      return this;\n    },\n    contains: function () {\n      return true;\n    }\n  };\n\n  /**\n   * An empty set that contains no elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n  lunr.Set.empty = {\n    intersect: function () {\n      return this;\n    },\n    union: function (other) {\n      return other;\n    },\n    contains: function () {\n      return false;\n    }\n  };\n\n  /**\n   * Returns true if this set contains the specified object.\n   *\n   * @param {object} object - Object whose presence in this set is to be tested.\n   * @returns {boolean} - True if this set contains the specified object.\n   */\n  lunr.Set.prototype.contains = function (object) {\n    return !!this.elements[object];\n  };\n\n  /**\n   * Returns a new set containing only the elements that are present in both\n   * this set and the specified set.\n   *\n   * @param {lunr.Set} other - set to intersect with this set.\n   * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n   */\n\n  lunr.Set.prototype.intersect = function (other) {\n    var a,\n      b,\n      elements,\n      intersection = [];\n    if (other === lunr.Set.complete) {\n      return this;\n    }\n    if (other === lunr.Set.empty) {\n      return other;\n    }\n    if (this.length < other.length) {\n      a = this;\n      b = other;\n    } else {\n      a = other;\n      b = this;\n    }\n    elements = Object.keys(a.elements);\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n      if (element in b.elements) {\n        intersection.push(element);\n      }\n    }\n    return new lunr.Set(intersection);\n  };\n\n  /**\n   * Returns a new set combining the elements of this and the specified set.\n   *\n   * @param {lunr.Set} other - set to union with this set.\n   * @return {lunr.Set} a new set that is the union of this and the specified set.\n   */\n\n  lunr.Set.prototype.union = function (other) {\n    if (other === lunr.Set.complete) {\n      return lunr.Set.complete;\n    }\n    if (other === lunr.Set.empty) {\n      return this;\n    }\n    return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)));\n  };\n  /**\n   * A function to calculate the inverse document frequency for\n   * a posting. This is shared between the builder and the index\n   *\n   * @private\n   * @param {object} posting - The posting for a given term\n   * @param {number} documentCount - The total number of documents.\n   */\n  lunr.idf = function (posting, documentCount) {\n    var documentsWithTerm = 0;\n    for (var fieldName in posting) {\n      if (fieldName == '_index') continue; // Ignore the term index, its not a field\n      documentsWithTerm += Object.keys(posting[fieldName]).length;\n    }\n    var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5);\n    return Math.log(1 + Math.abs(x));\n  };\n\n  /**\n   * A token wraps a string representation of a token\n   * as it is passed through the text processing pipeline.\n   *\n   * @constructor\n   * @param {string} [str=''] - The string token being wrapped.\n   * @param {object} [metadata={}] - Metadata associated with this token.\n   */\n  lunr.Token = function (str, metadata) {\n    this.str = str || \"\";\n    this.metadata = metadata || {};\n  };\n\n  /**\n   * Returns the token string that is being wrapped by this object.\n   *\n   * @returns {string}\n   */\n  lunr.Token.prototype.toString = function () {\n    return this.str;\n  };\n\n  /**\n   * A token update function is used when updating or optionally\n   * when cloning a token.\n   *\n   * @callback lunr.Token~updateFunction\n   * @param {string} str - The string representation of the token.\n   * @param {Object} metadata - All metadata associated with this token.\n   */\n\n  /**\n   * Applies the given function to the wrapped string token.\n   *\n   * @example\n   * token.update(function (str, metadata) {\n   *   return str.toUpperCase()\n   * })\n   *\n   * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n   * @returns {lunr.Token}\n   */\n  lunr.Token.prototype.update = function (fn) {\n    this.str = fn(this.str, this.metadata);\n    return this;\n  };\n\n  /**\n   * Creates a clone of this token. Optionally a function can be\n   * applied to the cloned token.\n   *\n   * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n   * @returns {lunr.Token}\n   */\n  lunr.Token.prototype.clone = function (fn) {\n    fn = fn || function (s) {\n      return s;\n    };\n    return new lunr.Token(fn(this.str, this.metadata), this.metadata);\n  };\n  /*!\n   * lunr.tokenizer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A function for splitting a string into tokens ready to be inserted into\n   * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n   * the value of this property to change how strings are split into tokens.\n   *\n   * This tokenizer will convert its parameter to a string by calling `toString` and\n   * then will split this string on the character in `lunr.tokenizer.separator`.\n   * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n   *\n   * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n   * added as metadata to every token that is created from the object to be tokenized.\n   *\n   * @static\n   * @param {?(string|object|object[])} obj - The object to convert into tokens\n   * @param {?object} metadata - Optional metadata to associate with every token\n   * @returns {lunr.Token[]}\n   * @see {@link lunr.Pipeline}\n   */\n  lunr.tokenizer = function (obj, metadata) {\n    if (obj == null || obj == undefined) {\n      return [];\n    }\n    if (Array.isArray(obj)) {\n      return obj.map(function (t) {\n        return new lunr.Token(lunr.utils.asString(t).toLowerCase(), lunr.utils.clone(metadata));\n      });\n    }\n    var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = [];\n    for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n      var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart;\n      if (char.match(lunr.tokenizer.separator) || sliceEnd == len) {\n        if (sliceLength > 0) {\n          var tokenMetadata = lunr.utils.clone(metadata) || {};\n          tokenMetadata[\"position\"] = [sliceStart, sliceLength];\n          tokenMetadata[\"index\"] = tokens.length;\n          tokens.push(new lunr.Token(str.slice(sliceStart, sliceEnd), tokenMetadata));\n        }\n        sliceStart = sliceEnd + 1;\n      }\n    }\n    return tokens;\n  };\n\n  /**\n   * The separator used to split a string into tokens. Override this property to change the behaviour of\n   * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see lunr.tokenizer\n   */\n  lunr.tokenizer.separator = /[\\s\\-]+/;\n  /*!\n   * lunr.Pipeline\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Pipelines maintain an ordered list of functions to be applied to all\n   * tokens in documents entering the search index and queries being ran against\n   * the index.\n   *\n   * An instance of lunr.Index created with the lunr shortcut will contain a\n   * pipeline with a stop word filter and an English language stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline will call each function in turn, passing a token, the\n   * index of that token in the original list of all tokens and finally a list of\n   * all the original tokens.\n   *\n   * The output of functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with lunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n  lunr.Pipeline = function () {\n    this._stack = [];\n  };\n  lunr.Pipeline.registeredFunctions = Object.create(null);\n\n  /**\n   * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n   * string as well as all known metadata. A pipeline function can mutate the token string\n   * or mutate (or add) metadata for a given token.\n   *\n   * A pipeline function can indicate that the passed token should be discarded by returning\n   * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n   * functions and will not be added to the index.\n   *\n   * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n   * to any downstream pipeline functions and all will returned tokens will be added to the index.\n   *\n   * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n   *\n   * @interface lunr.PipelineFunction\n   * @param {lunr.Token} token - A token from the document being processed.\n   * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n   * @param {lunr.Token[]} tokens - All tokens for this document/field.\n   * @returns {(?lunr.Token|lunr.Token[])}\n   */\n\n  /**\n   * Register a function with the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @param {String} label - The label to register this function with\n   */\n  lunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in this.registeredFunctions) {\n      lunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n    fn.label = label;\n    lunr.Pipeline.registeredFunctions[fn.label] = fn;\n  };\n\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @private\n   */\n  lunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n    if (!isRegistered) {\n      lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with lunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised - The serialised pipeline to load.\n   * @returns {lunr.Pipeline}\n   */\n  lunr.Pipeline.load = function (serialised) {\n    var pipeline = new lunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = lunr.Pipeline.registeredFunctions[fnName];\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load unregistered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n   */\n  lunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      this._stack.push(fn);\n    }, this);\n  };\n\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n  lunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n    var pos = this._stack.indexOf(existingFn);\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n    pos = pos + 1;\n    this._stack.splice(pos, 0, newFn);\n  };\n\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n  lunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n    var pos = this._stack.indexOf(existingFn);\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n    this._stack.splice(pos, 0, newFn);\n  };\n\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n   */\n  lunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._stack.indexOf(fn);\n    if (pos == -1) {\n      return;\n    }\n    this._stack.splice(pos, 1);\n  };\n\n  /**\n   * Runs the current list of functions that make up the pipeline against the\n   * passed tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @returns {Array}\n   */\n  lunr.Pipeline.prototype.run = function (tokens) {\n    var stackLength = this._stack.length;\n    for (var i = 0; i < stackLength; i++) {\n      var fn = this._stack[i];\n      var memo = [];\n      for (var j = 0; j < tokens.length; j++) {\n        var result = fn(tokens[j], j, tokens);\n        if (result === null || result === void 0 || result === '') continue;\n        if (Array.isArray(result)) {\n          for (var k = 0; k < result.length; k++) {\n            memo.push(result[k]);\n          }\n        } else {\n          memo.push(result);\n        }\n      }\n      tokens = memo;\n    }\n    return tokens;\n  };\n\n  /**\n   * Convenience method for passing a string through a pipeline and getting\n   * strings out. This method takes care of wrapping the passed string in a\n   * token and mapping the resulting tokens back to strings.\n   *\n   * @param {string} str - The string to pass through the pipeline.\n   * @param {?object} metadata - Optional metadata to associate with the token\n   * passed to the pipeline.\n   * @returns {string[]}\n   */\n  lunr.Pipeline.prototype.runString = function (str, metadata) {\n    var token = new lunr.Token(str, metadata);\n    return this.run([token]).map(function (t) {\n      return t.toString();\n    });\n  };\n\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   */\n  lunr.Pipeline.prototype.reset = function () {\n    this._stack = [];\n  };\n\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @returns {Array}\n   */\n  lunr.Pipeline.prototype.toJSON = function () {\n    return this._stack.map(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * lunr.Vector\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A vector is used to construct the vector space of documents and queries. These\n   * vectors support operations to determine the similarity between two documents or\n   * a document and a query.\n   *\n   * Normally no parameters are required for initializing a vector, but in the case of\n   * loading a previously dumped vector the raw elements can be provided to the constructor.\n   *\n   * For performance reasons vectors are implemented with a flat array, where an elements\n   * index is immediately followed by its value. E.g. [index, value, index, value]. This\n   * allows the underlying array to be as sparse as possible and still offer decent\n   * performance when being used for vector calculations.\n   *\n   * @constructor\n   * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n   */\n  lunr.Vector = function (elements) {\n    this._magnitude = 0;\n    this.elements = elements || [];\n  };\n\n  /**\n   * Calculates the position within the vector to insert a given index.\n   *\n   * This is used internally by insert and upsert. If there are duplicate indexes then\n   * the position is returned as if the value for that index were to be updated, but it\n   * is the callers responsibility to check whether there is a duplicate at that index\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @returns {Number}\n   */\n  lunr.Vector.prototype.positionForIndex = function (index) {\n    // For an empty vector the tuple can be inserted at the beginning\n    if (this.elements.length == 0) {\n      return 0;\n    }\n    var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2];\n    while (sliceLength > 1) {\n      if (pivotIndex < index) {\n        start = pivotPoint;\n      }\n      if (pivotIndex > index) {\n        end = pivotPoint;\n      }\n      if (pivotIndex == index) {\n        break;\n      }\n      sliceLength = end - start;\n      pivotPoint = start + Math.floor(sliceLength / 2);\n      pivotIndex = this.elements[pivotPoint * 2];\n    }\n    if (pivotIndex == index) {\n      return pivotPoint * 2;\n    }\n    if (pivotIndex > index) {\n      return pivotPoint * 2;\n    }\n    if (pivotIndex < index) {\n      return (pivotPoint + 1) * 2;\n    }\n  };\n\n  /**\n   * Inserts an element at an index within the vector.\n   *\n   * Does not allow duplicates, will throw an error if there is already an entry\n   * for this index.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   */\n  lunr.Vector.prototype.insert = function (insertIdx, val) {\n    this.upsert(insertIdx, val, function () {\n      throw \"duplicate index\";\n    });\n  };\n\n  /**\n   * Inserts or updates an existing index within the vector.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   * @param {function} fn - A function that is called for updates, the existing value and the\n   * requested value are passed as arguments\n   */\n  lunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n    this._magnitude = 0;\n    var position = this.positionForIndex(insertIdx);\n    if (this.elements[position] == insertIdx) {\n      this.elements[position + 1] = fn(this.elements[position + 1], val);\n    } else {\n      this.elements.splice(position, 0, insertIdx, val);\n    }\n  };\n\n  /**\n   * Calculates the magnitude of this vector.\n   *\n   * @returns {Number}\n   */\n  lunr.Vector.prototype.magnitude = function () {\n    if (this._magnitude) return this._magnitude;\n    var sumOfSquares = 0,\n      elementsLength = this.elements.length;\n    for (var i = 1; i < elementsLength; i += 2) {\n      var val = this.elements[i];\n      sumOfSquares += val * val;\n    }\n    return this._magnitude = Math.sqrt(sumOfSquares);\n  };\n\n  /**\n   * Calculates the dot product of this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n   * @returns {Number}\n   */\n  lunr.Vector.prototype.dot = function (otherVector) {\n    var dotProduct = 0,\n      a = this.elements,\n      b = otherVector.elements,\n      aLen = a.length,\n      bLen = b.length,\n      aVal = 0,\n      bVal = 0,\n      i = 0,\n      j = 0;\n    while (i < aLen && j < bLen) {\n      aVal = a[i], bVal = b[j];\n      if (aVal < bVal) {\n        i += 2;\n      } else if (aVal > bVal) {\n        j += 2;\n      } else if (aVal == bVal) {\n        dotProduct += a[i + 1] * b[j + 1];\n        i += 2;\n        j += 2;\n      }\n    }\n    return dotProduct;\n  };\n\n  /**\n   * Calculates the similarity between this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The other vector to calculate the\n   * similarity with.\n   * @returns {Number}\n   */\n  lunr.Vector.prototype.similarity = function (otherVector) {\n    return this.dot(otherVector) / this.magnitude() || 0;\n  };\n\n  /**\n   * Converts the vector to an array of the elements within the vector.\n   *\n   * @returns {Number[]}\n   */\n  lunr.Vector.prototype.toArray = function () {\n    var output = new Array(this.elements.length / 2);\n    for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n      output[j] = this.elements[i];\n    }\n    return output;\n  };\n\n  /**\n   * A JSON serializable representation of the vector.\n   *\n   * @returns {Number[]}\n   */\n  lunr.Vector.prototype.toJSON = function () {\n    return this.elements;\n  };\n  /* eslint-disable */\n  /*!\n   * lunr.stemmer\n   * Copyright (C) 2020 Oliver Nightingale\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * lunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token - The string to stem\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   * @function\n   */\n  lunr.stemmer = function () {\n    var step2list = {\n        \"ational\": \"ate\",\n        \"tional\": \"tion\",\n        \"enci\": \"ence\",\n        \"anci\": \"ance\",\n        \"izer\": \"ize\",\n        \"bli\": \"ble\",\n        \"alli\": \"al\",\n        \"entli\": \"ent\",\n        \"eli\": \"e\",\n        \"ousli\": \"ous\",\n        \"ization\": \"ize\",\n        \"ation\": \"ate\",\n        \"ator\": \"ate\",\n        \"alism\": \"al\",\n        \"iveness\": \"ive\",\n        \"fulness\": \"ful\",\n        \"ousness\": \"ous\",\n        \"aliti\": \"al\",\n        \"iviti\": \"ive\",\n        \"biliti\": \"ble\",\n        \"logi\": \"log\"\n      },\n      step3list = {\n        \"icate\": \"ic\",\n        \"ative\": \"\",\n        \"alize\": \"al\",\n        \"iciti\": \"ic\",\n        \"ical\": \"ic\",\n        \"ful\": \"\",\n        \"ness\": \"\"\n      },\n      c = \"[^aeiou]\",\n      // consonant\n      v = \"[aeiouy]\",\n      // vowel\n      C = c + \"[^aeiouy]*\",\n      // consonant sequence\n      V = v + \"[aeiou]*\",\n      // vowel sequence\n\n      mgr0 = \"^(\" + C + \")?\" + V + C,\n      // [C]VC... is m>0\n      meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n      // [C]VC[V] is m=1\n      mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n      // [C]VCVC... is m>1\n      s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n      if (w.length < 3) {\n        return w;\n      }\n      firstch = w.substr(0, 1);\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      }\n\n      // Step 1a\n      re = re_1a;\n      re2 = re2_1a;\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      }\n\n      // Step 1b\n      re = re_1b;\n      re2 = re2_1b;\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      }\n\n      // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n      re = re_1c;\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      }\n\n      // Step 2\n      re = re_2;\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      }\n\n      // Step 3\n      re = re_3;\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      }\n\n      // Step 4\n      re = re_4;\n      re2 = re2_4;\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      }\n\n      // Step 5\n      re = re_5;\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n      re = re_5_1;\n      re2 = re_mgr1;\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      }\n\n      // and turn initial Y back to y\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n      return w;\n    };\n    return function (token) {\n      return token.update(porterStemmer);\n    };\n  }();\n  lunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer');\n  /*!\n   * lunr.stopWordFilter\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n   * list of stop words.\n   *\n   * The built in lunr.stopWordFilter is built using this generator and can be used\n   * to generate custom stopWordFilters for applications or non English languages.\n   *\n   * @function\n   * @param {Array} token The token to pass through the filter\n   * @returns {lunr.PipelineFunction}\n   * @see lunr.Pipeline\n   * @see lunr.stopWordFilter\n   */\n  lunr.generateStopWordFilter = function (stopWords) {\n    var words = stopWords.reduce(function (memo, stopWord) {\n      memo[stopWord] = stopWord;\n      return memo;\n    }, {});\n    return function (token) {\n      if (token && words[token.toString()] !== token.toString()) return token;\n    };\n  };\n\n  /**\n   * lunr.stopWordFilter is an English language stop word list filter, any words\n   * contained in the list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   *\n   * @function\n   * @implements {lunr.PipelineFunction}\n   * @params {lunr.Token} token - A token to check for being a stop word.\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   */\n  lunr.stopWordFilter = lunr.generateStopWordFilter(['a', 'able', 'about', 'across', 'after', 'all', 'almost', 'also', 'am', 'among', 'an', 'and', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'but', 'by', 'can', 'cannot', 'could', 'dear', 'did', 'do', 'does', 'either', 'else', 'ever', 'every', 'for', 'from', 'get', 'got', 'had', 'has', 'have', 'he', 'her', 'hers', 'him', 'his', 'how', 'however', 'i', 'if', 'in', 'into', 'is', 'it', 'its', 'just', 'least', 'let', 'like', 'likely', 'may', 'me', 'might', 'most', 'must', 'my', 'neither', 'no', 'nor', 'not', 'of', 'off', 'often', 'on', 'only', 'or', 'other', 'our', 'own', 'rather', 'said', 'say', 'says', 'she', 'should', 'since', 'so', 'some', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'tis', 'to', 'too', 'twas', 'us', 'wants', 'was', 'we', 'were', 'what', 'when', 'where', 'which', 'while', 'who', 'whom', 'why', 'will', 'with', 'would', 'yet', 'you', 'your']);\n  lunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * lunr.trimmer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.trimmer is a pipeline function for trimming non word\n   * characters from the beginning and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token The token to pass through the filter\n   * @returns {lunr.Token}\n   * @see lunr.Pipeline\n   */\n  lunr.trimmer = function (token) {\n    return token.update(function (s) {\n      return s.replace(/^\\W+/, '').replace(/\\W+$/, '');\n    });\n  };\n  lunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer');\n  /*!\n   * lunr.TokenSet\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A token set is used to store the unique list of all tokens\n   * within an index. Token sets are also used to represent an\n   * incoming query to the index, this query token set and index\n   * token set are then intersected to find which tokens to look\n   * up in the inverted index.\n   *\n   * A token set can hold multiple tokens, as in the case of the\n   * index token set, or it can hold a single token as in the\n   * case of a simple query token set.\n   *\n   * Additionally token sets are used to perform wildcard matching.\n   * Leading, contained and trailing wildcards are supported, and\n   * from this edit distance matching can also be provided.\n   *\n   * Token sets are implemented as a minimal finite state automata,\n   * where both common prefixes and suffixes are shared between tokens.\n   * This helps to reduce the space used for storing the token set.\n   *\n   * @constructor\n   */\n  lunr.TokenSet = function () {\n    this.final = false;\n    this.edges = {};\n    this.id = lunr.TokenSet._nextId;\n    lunr.TokenSet._nextId += 1;\n  };\n\n  /**\n   * Keeps track of the next, auto increment, identifier to assign\n   * to a new tokenSet.\n   *\n   * TokenSets require a unique identifier to be correctly minimised.\n   *\n   * @private\n   */\n  lunr.TokenSet._nextId = 1;\n\n  /**\n   * Creates a TokenSet instance from the given sorted array of words.\n   *\n   * @param {String[]} arr - A sorted array of strings to create the set from.\n   * @returns {lunr.TokenSet}\n   * @throws Will throw an error if the input array is not sorted.\n   */\n  lunr.TokenSet.fromArray = function (arr) {\n    var builder = new lunr.TokenSet.Builder();\n    for (var i = 0, len = arr.length; i < len; i++) {\n      builder.insert(arr[i]);\n    }\n    builder.finish();\n    return builder.root;\n  };\n\n  /**\n   * Creates a token set from a query clause.\n   *\n   * @private\n   * @param {Object} clause - A single clause from lunr.Query.\n   * @param {string} clause.term - The query clause term.\n   * @param {number} [clause.editDistance] - The optional edit distance for the term.\n   * @returns {lunr.TokenSet}\n   */\n  lunr.TokenSet.fromClause = function (clause) {\n    if ('editDistance' in clause) {\n      return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance);\n    } else {\n      return lunr.TokenSet.fromString(clause.term);\n    }\n  };\n\n  /**\n   * Creates a token set representing a single string with a specified\n   * edit distance.\n   *\n   * Insertions, deletions, substitutions and transpositions are each\n   * treated as an edit distance of 1.\n   *\n   * Increasing the allowed edit distance will have a dramatic impact\n   * on the performance of both creating and intersecting these TokenSets.\n   * It is advised to keep the edit distance less than 3.\n   *\n   * @param {string} str - The string to create the token set from.\n   * @param {number} editDistance - The allowed edit distance to match.\n   * @returns {lunr.Vector}\n   */\n  lunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n    var root = new lunr.TokenSet();\n    var stack = [{\n      node: root,\n      editsRemaining: editDistance,\n      str: str\n    }];\n    while (stack.length) {\n      var frame = stack.pop();\n\n      // no edit\n      if (frame.str.length > 0) {\n        var char = frame.str.charAt(0),\n          noEditNode;\n        if (char in frame.node.edges) {\n          noEditNode = frame.node.edges[char];\n        } else {\n          noEditNode = new lunr.TokenSet();\n          frame.node.edges[char] = noEditNode;\n        }\n        if (frame.str.length == 1) {\n          noEditNode.final = true;\n        }\n        stack.push({\n          node: noEditNode,\n          editsRemaining: frame.editsRemaining,\n          str: frame.str.slice(1)\n        });\n      }\n      if (frame.editsRemaining == 0) {\n        continue;\n      }\n\n      // insertion\n      if (\"*\" in frame.node.edges) {\n        var insertionNode = frame.node.edges[\"*\"];\n      } else {\n        var insertionNode = new lunr.TokenSet();\n        frame.node.edges[\"*\"] = insertionNode;\n      }\n      if (frame.str.length == 0) {\n        insertionNode.final = true;\n      }\n      stack.push({\n        node: insertionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str\n      });\n\n      // deletion\n      // can only do a deletion if we have enough edits remaining\n      // and if there are characters left to delete in the string\n      if (frame.str.length > 1) {\n        stack.push({\n          node: frame.node,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      }\n\n      // deletion\n      // just removing the last character from the str\n      if (frame.str.length == 1) {\n        frame.node.final = true;\n      }\n\n      // substitution\n      // can only do a substitution if we have enough edits remaining\n      // and if there are characters left to substitute\n      if (frame.str.length >= 1) {\n        if (\"*\" in frame.node.edges) {\n          var substitutionNode = frame.node.edges[\"*\"];\n        } else {\n          var substitutionNode = new lunr.TokenSet();\n          frame.node.edges[\"*\"] = substitutionNode;\n        }\n        if (frame.str.length == 1) {\n          substitutionNode.final = true;\n        }\n        stack.push({\n          node: substitutionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      }\n\n      // transposition\n      // can only do a transposition if there are edits remaining\n      // and there are enough characters to transpose\n      if (frame.str.length > 1) {\n        var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode;\n        if (charB in frame.node.edges) {\n          transposeNode = frame.node.edges[charB];\n        } else {\n          transposeNode = new lunr.TokenSet();\n          frame.node.edges[charB] = transposeNode;\n        }\n        if (frame.str.length == 1) {\n          transposeNode.final = true;\n        }\n        stack.push({\n          node: transposeNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: charA + frame.str.slice(2)\n        });\n      }\n    }\n    return root;\n  };\n\n  /**\n   * Creates a TokenSet from a string.\n   *\n   * The string may contain one or more wildcard characters (*)\n   * that will allow wildcard matching when intersecting with\n   * another TokenSet.\n   *\n   * @param {string} str - The string to create a TokenSet from.\n   * @returns {lunr.TokenSet}\n   */\n  lunr.TokenSet.fromString = function (str) {\n    var node = new lunr.TokenSet(),\n      root = node;\n\n    /*\n     * Iterates through all characters within the passed string\n     * appending a node for each character.\n     *\n     * When a wildcard character is found then a self\n     * referencing edge is introduced to continually match\n     * any number of any characters.\n     */\n    for (var i = 0, len = str.length; i < len; i++) {\n      var char = str[i],\n        final = i == len - 1;\n      if (char == \"*\") {\n        node.edges[char] = node;\n        node.final = final;\n      } else {\n        var next = new lunr.TokenSet();\n        next.final = final;\n        node.edges[char] = next;\n        node = next;\n      }\n    }\n    return root;\n  };\n\n  /**\n   * Converts this TokenSet into an array of strings\n   * contained within the TokenSet.\n   *\n   * This is not intended to be used on a TokenSet that\n   * contains wildcards, in these cases the results are\n   * undefined and are likely to cause an infinite loop.\n   *\n   * @returns {string[]}\n   */\n  lunr.TokenSet.prototype.toArray = function () {\n    var words = [];\n    var stack = [{\n      prefix: \"\",\n      node: this\n    }];\n    while (stack.length) {\n      var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length;\n      if (frame.node.final) {\n        /* In Safari, at this point the prefix is sometimes corrupted, see:\n         * https://github.com/olivernn/lunr.js/issues/279 Calling any\n         * String.prototype method forces Safari to \"cast\" this string to what\n         * it's supposed to be, fixing the bug. */\n        frame.prefix.charAt(0);\n        words.push(frame.prefix);\n      }\n      for (var i = 0; i < len; i++) {\n        var edge = edges[i];\n        stack.push({\n          prefix: frame.prefix.concat(edge),\n          node: frame.node.edges[edge]\n        });\n      }\n    }\n    return words;\n  };\n\n  /**\n   * Generates a string representation of a TokenSet.\n   *\n   * This is intended to allow TokenSets to be used as keys\n   * in objects, largely to aid the construction and minimisation\n   * of a TokenSet. As such it is not designed to be a human\n   * friendly representation of the TokenSet.\n   *\n   * @returns {string}\n   */\n  lunr.TokenSet.prototype.toString = function () {\n    // NOTE: Using Object.keys here as this.edges is very likely\n    // to enter 'hash-mode' with many keys being added\n    //\n    // avoiding a for-in loop here as it leads to the function\n    // being de-optimised (at least in V8). From some simple\n    // benchmarks the performance is comparable, but allowing\n    // V8 to optimize may mean easy performance wins in the future.\n\n    if (this._str) {\n      return this._str;\n    }\n    var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length;\n    for (var i = 0; i < len; i++) {\n      var label = labels[i],\n        node = this.edges[label];\n      str = str + label + node.id;\n    }\n    return str;\n  };\n\n  /**\n   * Returns a new TokenSet that is the intersection of\n   * this TokenSet and the passed TokenSet.\n   *\n   * This intersection will take into account any wildcards\n   * contained within the TokenSet.\n   *\n   * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n   * @returns {lunr.TokenSet}\n   */\n  lunr.TokenSet.prototype.intersect = function (b) {\n    var output = new lunr.TokenSet(),\n      frame = undefined;\n    var stack = [{\n      qNode: b,\n      output: output,\n      node: this\n    }];\n    while (stack.length) {\n      frame = stack.pop();\n\n      // NOTE: As with the #toString method, we are using\n      // Object.keys and a for loop instead of a for-in loop\n      // as both of these objects enter 'hash' mode, causing\n      // the function to be de-optimised in V8\n      var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length;\n      for (var q = 0; q < qLen; q++) {\n        var qEdge = qEdges[q];\n        for (var n = 0; n < nLen; n++) {\n          var nEdge = nEdges[n];\n          if (nEdge == qEdge || qEdge == '*') {\n            var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined;\n            if (nEdge in frame.output.edges) {\n              // an edge already exists for this character\n              // no need to create a new node, just set the finality\n              // bit unless this node is already final\n              next = frame.output.edges[nEdge];\n              next.final = next.final || final;\n            } else {\n              // no edge exists yet, must create one\n              // set the finality bit and insert it\n              // into the output\n              next = new lunr.TokenSet();\n              next.final = final;\n              frame.output.edges[nEdge] = next;\n            }\n            stack.push({\n              qNode: qNode,\n              output: next,\n              node: node\n            });\n          }\n        }\n      }\n    }\n    return output;\n  };\n  lunr.TokenSet.Builder = function () {\n    this.previousWord = \"\";\n    this.root = new lunr.TokenSet();\n    this.uncheckedNodes = [];\n    this.minimizedNodes = {};\n  };\n  lunr.TokenSet.Builder.prototype.insert = function (word) {\n    var node,\n      commonPrefix = 0;\n    if (word < this.previousWord) {\n      throw new Error(\"Out of order word insertion\");\n    }\n    for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n      if (word[i] != this.previousWord[i]) break;\n      commonPrefix++;\n    }\n    this.minimize(commonPrefix);\n    if (this.uncheckedNodes.length == 0) {\n      node = this.root;\n    } else {\n      node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child;\n    }\n    for (var i = commonPrefix; i < word.length; i++) {\n      var nextNode = new lunr.TokenSet(),\n        char = word[i];\n      node.edges[char] = nextNode;\n      this.uncheckedNodes.push({\n        parent: node,\n        char: char,\n        child: nextNode\n      });\n      node = nextNode;\n    }\n    node.final = true;\n    this.previousWord = word;\n  };\n  lunr.TokenSet.Builder.prototype.finish = function () {\n    this.minimize(0);\n  };\n  lunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n    for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n      var node = this.uncheckedNodes[i],\n        childKey = node.child.toString();\n      if (childKey in this.minimizedNodes) {\n        node.parent.edges[node.char] = this.minimizedNodes[childKey];\n      } else {\n        // Cache the key for this node since\n        // we know it can't change anymore\n        node.child._str = childKey;\n        this.minimizedNodes[childKey] = node.child;\n      }\n      this.uncheckedNodes.pop();\n    }\n  };\n  /*!\n   * lunr.Index\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * An index contains the built index of all documents and provides a query interface\n   * to the index.\n   *\n   * Usually instances of lunr.Index will not be created using this constructor, instead\n   * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n   * used to load previously built and serialized indexes.\n   *\n   * @constructor\n   * @param {Object} attrs - The attributes of the built search index.\n   * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n   * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n   * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n   * @param {string[]} attrs.fields - The names of indexed document fields.\n   * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n   */\n  lunr.Index = function (attrs) {\n    this.invertedIndex = attrs.invertedIndex;\n    this.fieldVectors = attrs.fieldVectors;\n    this.tokenSet = attrs.tokenSet;\n    this.fields = attrs.fields;\n    this.pipeline = attrs.pipeline;\n  };\n\n  /**\n   * A result contains details of a document matching a search query.\n   * @typedef {Object} lunr.Index~Result\n   * @property {string} ref - The reference of the document this result represents.\n   * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n   * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n   */\n\n  /**\n   * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n   * query language which itself is parsed into an instance of lunr.Query.\n   *\n   * For programmatically building queries it is advised to directly use lunr.Query, the query language\n   * is best used for human entered text rather than program generated text.\n   *\n   * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n   * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n   * or 'world', though those that contain both will rank higher in the results.\n   *\n   * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n   * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n   * wildcards will increase the number of documents that will be found but can also have a negative\n   * impact on query performance, especially with wildcards at the beginning of a term.\n   *\n   * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n   * hello in the title field will match this query. Using a field not present in the index will lead\n   * to an error being thrown.\n   *\n   * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n   * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n   * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n   * Avoid large values for edit distance to improve query performance.\n   *\n   * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n   * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n   * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n   * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n   * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n   *\n   * To escape special characters the backslash character '\\' can be used, this allows searches to include\n   * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n   * of attempting to apply a boost of 2 to the search term \"foo\".\n   *\n   * @typedef {string} lunr.Index~QueryString\n   * @example <caption>Simple single term query</caption>\n   * hello\n   * @example <caption>Multiple term query</caption>\n   * hello world\n   * @example <caption>term scoped to a field</caption>\n   * title:hello\n   * @example <caption>term with a boost of 10</caption>\n   * hello^10\n   * @example <caption>term with an edit distance of 2</caption>\n   * hello~2\n   * @example <caption>terms with presence modifiers</caption>\n   * -foo +bar baz\n   */\n\n  /**\n   * Performs a search against the index using lunr query syntax.\n   *\n   * Results will be returned sorted by their score, the most relevant results\n   * will be returned first.  For details on how the score is calculated, please see\n   * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n   *\n   * For more programmatic querying use lunr.Index#query.\n   *\n   * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n   * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n   * @returns {lunr.Index~Result[]}\n   */\n  lunr.Index.prototype.search = function (queryString) {\n    return this.query(function (query) {\n      var parser = new lunr.QueryParser(queryString, query);\n      parser.parse();\n    });\n  };\n\n  /**\n   * A query builder callback provides a query object to be used to express\n   * the query to perform on the index.\n   *\n   * @callback lunr.Index~queryBuilder\n   * @param {lunr.Query} query - The query object to build up.\n   * @this lunr.Query\n   */\n\n  /**\n   * Performs a query against the index using the yielded lunr.Query object.\n   *\n   * If performing programmatic queries against the index, this method is preferred\n   * over lunr.Index#search so as to avoid the additional query parsing overhead.\n   *\n   * A query object is yielded to the supplied function which should be used to\n   * express the query to be run against the index.\n   *\n   * Note that although this function takes a callback parameter it is _not_ an\n   * asynchronous operation, the callback is just yielded a query object to be\n   * customized.\n   *\n   * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n   * @returns {lunr.Index~Result[]}\n   */\n  lunr.Index.prototype.query = function (fn) {\n    // for each query clause\n    // * process terms\n    // * expand terms from token set\n    // * find matching documents and metadata\n    // * get document vectors\n    // * score documents\n\n    var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null);\n\n    /*\n     * To support field level boosts a query vector is created per\n     * field. An empty vector is eagerly created to support negated\n     * queries.\n     */\n    for (var i = 0; i < this.fields.length; i++) {\n      queryVectors[this.fields[i]] = new lunr.Vector();\n    }\n    fn.call(query, query);\n    for (var i = 0; i < query.clauses.length; i++) {\n      /*\n       * Unless the pipeline has been disabled for this term, which is\n       * the case for terms with wildcards, we need to pass the clause\n       * term through the search pipeline. A pipeline returns an array\n       * of processed terms. Pipeline functions may expand the passed\n       * term, which means we may end up performing multiple index lookups\n       * for a single query term.\n       */\n      var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty;\n      if (clause.usePipeline) {\n        terms = this.pipeline.runString(clause.term, {\n          fields: clause.fields\n        });\n      } else {\n        terms = [clause.term];\n      }\n      for (var m = 0; m < terms.length; m++) {\n        var term = terms[m];\n\n        /*\n         * Each term returned from the pipeline needs to use the same query\n         * clause object, e.g. the same boost and or edit distance. The\n         * simplest way to do this is to re-use the clause object but mutate\n         * its term property.\n         */\n        clause.term = term;\n\n        /*\n         * From the term in the clause we create a token set which will then\n         * be used to intersect the indexes token set to get a list of terms\n         * to lookup in the inverted index\n         */\n        var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray();\n\n        /*\n         * If a term marked as required does not exist in the tokenSet it is\n         * impossible for the search to return any matches. We set all the field\n         * scoped required matches set to empty and stop examining any further\n         * clauses.\n         */\n        if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n          for (var k = 0; k < clause.fields.length; k++) {\n            var field = clause.fields[k];\n            requiredMatches[field] = lunr.Set.empty;\n          }\n          break;\n        }\n        for (var j = 0; j < expandedTerms.length; j++) {\n          /*\n           * For each term get the posting and termIndex, this is required for\n           * building the query vector.\n           */\n          var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index;\n          for (var k = 0; k < clause.fields.length; k++) {\n            /*\n             * For each field that this query term is scoped by (by default\n             * all fields are in scope) we need to get all the document refs\n             * that have this term in that field.\n             *\n             * The posting is the entry in the invertedIndex for the matching\n             * term from above.\n             */\n            var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs);\n\n            /*\n             * if the presence of this term is required ensure that the matching\n             * documents are added to the set of required matches for this clause.\n             *\n             */\n            if (clause.presence == lunr.Query.presence.REQUIRED) {\n              clauseMatches = clauseMatches.union(matchingDocumentsSet);\n              if (requiredMatches[field] === undefined) {\n                requiredMatches[field] = lunr.Set.complete;\n              }\n            }\n\n            /*\n             * if the presence of this term is prohibited ensure that the matching\n             * documents are added to the set of prohibited matches for this field,\n             * creating that set if it does not yet exist.\n             */\n            if (clause.presence == lunr.Query.presence.PROHIBITED) {\n              if (prohibitedMatches[field] === undefined) {\n                prohibitedMatches[field] = lunr.Set.empty;\n              }\n              prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet);\n\n              /*\n               * Prohibited matches should not be part of the query vector used for\n               * similarity scoring and no metadata should be extracted so we continue\n               * to the next field\n               */\n              continue;\n            }\n\n            /*\n             * The query field vector is populated using the termIndex found for\n             * the term and a unit value with the appropriate boost applied.\n             * Using upsert because there could already be an entry in the vector\n             * for the term we are working with. In that case we just add the scores\n             * together.\n             */\n            queryVectors[field].upsert(termIndex, clause.boost, function (a, b) {\n              return a + b;\n            });\n\n            /**\n             * If we've already seen this term, field combo then we've already collected\n             * the matching documents and metadata, no need to go through all that again\n             */\n            if (termFieldCache[termField]) {\n              continue;\n            }\n            for (var l = 0; l < matchingDocumentRefs.length; l++) {\n              /*\n               * All metadata for this term/field/document triple\n               * are then extracted and collected into an instance\n               * of lunr.MatchData ready to be returned in the query\n               * results\n               */\n              var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef(matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch;\n              if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n                matchingFields[matchingFieldRef] = new lunr.MatchData(expandedTerm, field, metadata);\n              } else {\n                fieldMatch.add(expandedTerm, field, metadata);\n              }\n            }\n            termFieldCache[termField] = true;\n          }\n        }\n      }\n\n      /**\n       * If the presence was required we need to update the requiredMatches field sets.\n       * We do this after all fields for the term have collected their matches because\n       * the clause terms presence is required in _any_ of the fields not _all_ of the\n       * fields.\n       */\n      if (clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k];\n          requiredMatches[field] = requiredMatches[field].intersect(clauseMatches);\n        }\n      }\n    }\n\n    /**\n     * Need to combine the field scoped required and prohibited\n     * matching documents into a global set of required and prohibited\n     * matches\n     */\n    var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty;\n    for (var i = 0; i < this.fields.length; i++) {\n      var field = this.fields[i];\n      if (requiredMatches[field]) {\n        allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field]);\n      }\n      if (prohibitedMatches[field]) {\n        allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field]);\n      }\n    }\n    var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null);\n\n    /*\n     * If the query is negated (contains only prohibited terms)\n     * we need to get _all_ fieldRefs currently existing in the\n     * index. This is only done when we know that the query is\n     * entirely prohibited terms to avoid any cost of getting all\n     * fieldRefs unnecessarily.\n     *\n     * Additionally, blank MatchData must be created to correctly\n     * populate the results.\n     */\n    if (query.isNegated()) {\n      matchingFieldRefs = Object.keys(this.fieldVectors);\n      for (var i = 0; i < matchingFieldRefs.length; i++) {\n        var matchingFieldRef = matchingFieldRefs[i];\n        var fieldRef = lunr.FieldRef.fromString(matchingFieldRef);\n        matchingFields[matchingFieldRef] = new lunr.MatchData();\n      }\n    }\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      /*\n       * Currently we have document fields that match the query, but we\n       * need to return documents. The matchData and scores are combined\n       * from multiple fields belonging to the same document.\n       *\n       * Scores are calculated by field, using the query vectors created\n       * above, and combined into a final document score using addition.\n       */\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef;\n      if (!allRequiredMatches.contains(docRef)) {\n        continue;\n      }\n      if (allProhibitedMatches.contains(docRef)) {\n        continue;\n      }\n      var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch;\n      if ((docMatch = matches[docRef]) !== undefined) {\n        docMatch.score += score;\n        docMatch.matchData.combine(matchingFields[fieldRef]);\n      } else {\n        var match = {\n          ref: docRef,\n          score: score,\n          matchData: matchingFields[fieldRef]\n        };\n        matches[docRef] = match;\n        results.push(match);\n      }\n    }\n\n    /*\n     * Sort the results objects by score, highest first.\n     */\n    return results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n  };\n\n  /**\n   * Prepares the index for JSON serialization.\n   *\n   * The schema for this JSON blob will be described in a\n   * separate JSON schema file.\n   *\n   * @returns {Object}\n   */\n  lunr.Index.prototype.toJSON = function () {\n    var invertedIndex = Object.keys(this.invertedIndex).sort().map(function (term) {\n      return [term, this.invertedIndex[term]];\n    }, this);\n    var fieldVectors = Object.keys(this.fieldVectors).map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()];\n    }, this);\n    return {\n      version: lunr.version,\n      fields: this.fields,\n      fieldVectors: fieldVectors,\n      invertedIndex: invertedIndex,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n\n  /**\n   * Loads a previously serialized lunr.Index\n   *\n   * @param {Object} serializedIndex - A previously serialized lunr.Index\n   * @returns {lunr.Index}\n   */\n  lunr.Index.load = function (serializedIndex) {\n    var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder(),\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline);\n    if (serializedIndex.version != lunr.version) {\n      lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\");\n    }\n    for (var i = 0; i < serializedVectors.length; i++) {\n      var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1];\n      fieldVectors[ref] = new lunr.Vector(elements);\n    }\n    for (var i = 0; i < serializedInvertedIndex.length; i++) {\n      var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1];\n      tokenSetBuilder.insert(term);\n      invertedIndex[term] = posting;\n    }\n    tokenSetBuilder.finish();\n    attrs.fields = serializedIndex.fields;\n    attrs.fieldVectors = fieldVectors;\n    attrs.invertedIndex = invertedIndex;\n    attrs.tokenSet = tokenSetBuilder.root;\n    attrs.pipeline = pipeline;\n    return new lunr.Index(attrs);\n  };\n  /*!\n   * lunr.Builder\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Builder performs indexing on a set of documents and\n   * returns instances of lunr.Index ready for querying.\n   *\n   * All configuration of the index is done via the builder, the\n   * fields to index, the document reference, the text processing\n   * pipeline and document scoring parameters are all set on the\n   * builder before indexing.\n   *\n   * @constructor\n   * @property {string} _ref - Internal reference to the document reference field.\n   * @property {string[]} _fields - Internal reference to the document fields to index.\n   * @property {object} invertedIndex - The inverted index maps terms to document fields.\n   * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n   * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n   * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n   * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n   * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n   * @property {number} documentCount - Keeps track of the total number of documents indexed.\n   * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n   * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n   * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n   * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n   */\n  lunr.Builder = function () {\n    this._ref = \"id\";\n    this._fields = Object.create(null);\n    this._documents = Object.create(null);\n    this.invertedIndex = Object.create(null);\n    this.fieldTermFrequencies = {};\n    this.fieldLengths = {};\n    this.tokenizer = lunr.tokenizer;\n    this.pipeline = new lunr.Pipeline();\n    this.searchPipeline = new lunr.Pipeline();\n    this.documentCount = 0;\n    this._b = 0.75;\n    this._k1 = 1.2;\n    this.termIndex = 0;\n    this.metadataWhitelist = [];\n  };\n\n  /**\n   * Sets the document field used as the document reference. Every document must have this field.\n   * The type of this field in the document should be a string, if it is not a string it will be\n   * coerced into a string by calling toString.\n   *\n   * The default ref is 'id'.\n   *\n   * The ref should _not_ be changed during indexing, it should be set before any documents are\n   * added to the index. Changing it during indexing can lead to inconsistent results.\n   *\n   * @param {string} ref - The name of the reference field in the document.\n   */\n  lunr.Builder.prototype.ref = function (ref) {\n    this._ref = ref;\n  };\n\n  /**\n   * A function that is used to extract a field from a document.\n   *\n   * Lunr expects a field to be at the top level of a document, if however the field\n   * is deeply nested within a document an extractor function can be used to extract\n   * the right field for indexing.\n   *\n   * @callback fieldExtractor\n   * @param {object} doc - The document being added to the index.\n   * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n   * @example <caption>Extracting a nested field</caption>\n   * function (doc) { return doc.nested.field }\n   */\n\n  /**\n   * Adds a field to the list of document fields that will be indexed. Every document being\n   * indexed should have this field. Null values for this field in indexed documents will\n   * not cause errors but will limit the chance of that document being retrieved by searches.\n   *\n   * All fields should be added before adding documents to the index. Adding fields after\n   * a document has been indexed will have no effect on already indexed documents.\n   *\n   * Fields can be boosted at build time. This allows terms within that field to have more\n   * importance when ranking search results. Use a field boost to specify that matches within\n   * one field are more important than other fields.\n   *\n   * @param {string} fieldName - The name of a field to index in all documents.\n   * @param {object} attributes - Optional attributes associated with this field.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n   * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n   * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n   */\n  lunr.Builder.prototype.field = function (fieldName, attributes) {\n    if (/\\//.test(fieldName)) {\n      throw new RangeError(\"Field '\" + fieldName + \"' contains illegal character '/'\");\n    }\n    this._fields[fieldName] = attributes || {};\n  };\n\n  /**\n   * A parameter to tune the amount of field length normalisation that is applied when\n   * calculating relevance scores. A value of 0 will completely disable any normalisation\n   * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n   * will be clamped to the range 0 - 1.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n  lunr.Builder.prototype.b = function (number) {\n    if (number < 0) {\n      this._b = 0;\n    } else if (number > 1) {\n      this._b = 1;\n    } else {\n      this._b = number;\n    }\n  };\n\n  /**\n   * A parameter that controls the speed at which a rise in term frequency results in term\n   * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n   * slower saturation levels, a lower value will result in quicker saturation.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n  lunr.Builder.prototype.k1 = function (number) {\n    this._k1 = number;\n  };\n\n  /**\n   * Adds a document to the index.\n   *\n   * Before adding fields to the index the index should have been fully setup, with the document\n   * ref and all fields to index already having been specified.\n   *\n   * The document must have a field name as specified by the ref (by default this is 'id') and\n   * it should have all fields defined for indexing, though null or undefined values will not\n   * cause errors.\n   *\n   * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n   * this document should rank higher in search results than other documents.\n   *\n   * @param {object} doc - The document to add to the index.\n   * @param {object} attributes - Optional attributes associated with this document.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n   */\n  lunr.Builder.prototype.add = function (doc, attributes) {\n    var docRef = doc[this._ref],\n      fields = Object.keys(this._fields);\n    this._documents[docRef] = attributes || {};\n    this.documentCount += 1;\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef(docRef, fieldName),\n        fieldTerms = Object.create(null);\n      this.fieldTermFrequencies[fieldRef] = fieldTerms;\n      this.fieldLengths[fieldRef] = 0;\n\n      // store the length of this field for this document\n      this.fieldLengths[fieldRef] += terms.length;\n\n      // calculate term frequencies for this field\n      for (var j = 0; j < terms.length; j++) {\n        var term = terms[j];\n        if (fieldTerms[term] == undefined) {\n          fieldTerms[term] = 0;\n        }\n        fieldTerms[term] += 1;\n\n        // add to inverted index\n        // create an initial posting if one doesn't exist\n        if (this.invertedIndex[term] == undefined) {\n          var posting = Object.create(null);\n          posting[\"_index\"] = this.termIndex;\n          this.termIndex += 1;\n          for (var k = 0; k < fields.length; k++) {\n            posting[fields[k]] = Object.create(null);\n          }\n          this.invertedIndex[term] = posting;\n        }\n\n        // add an entry for this term/fieldName/docRef to the invertedIndex\n        if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n          this.invertedIndex[term][fieldName][docRef] = Object.create(null);\n        }\n\n        // store all whitelisted metadata about this token in the\n        // inverted index\n        for (var l = 0; l < this.metadataWhitelist.length; l++) {\n          var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey];\n          if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n            this.invertedIndex[term][fieldName][docRef][metadataKey] = [];\n          }\n          this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata);\n        }\n      }\n    }\n  };\n\n  /**\n   * Calculates the average document length for this index\n   *\n   * @private\n   */\n  lunr.Builder.prototype.calculateAverageFieldLengths = function () {\n    var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {};\n    for (var i = 0; i < numberOfFields; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName;\n      documentsWithField[field] || (documentsWithField[field] = 0);\n      documentsWithField[field] += 1;\n      accumulator[field] || (accumulator[field] = 0);\n      accumulator[field] += this.fieldLengths[fieldRef];\n    }\n    var fields = Object.keys(this._fields);\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i];\n      accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName];\n    }\n    this.averageFieldLength = accumulator;\n  };\n\n  /**\n   * Builds a vector space model of every document using lunr.Vector\n   *\n   * @private\n   */\n  lunr.Builder.prototype.createFieldVectors = function () {\n    var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null);\n    for (var i = 0; i < fieldRefsLength; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector(),\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length;\n      var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1;\n      for (var j = 0; j < termsLength; j++) {\n        var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf,\n          score,\n          scoreWithPrecision;\n        if (termIdfCache[term] === undefined) {\n          idf = lunr.idf(this.invertedIndex[term], this.documentCount);\n          termIdfCache[term] = idf;\n        } else {\n          idf = termIdfCache[term];\n        }\n        score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf);\n        score *= fieldBoost;\n        score *= docBoost;\n        scoreWithPrecision = Math.round(score * 1000) / 1000;\n        // Converts 1.23456789 to 1.234.\n        // Reducing the precision so that the vectors take up less\n        // space when serialised. Doing it now so that they behave\n        // the same before and after serialisation. Also, this is\n        // the fastest approach to reducing a number's precision in\n        // JavaScript.\n\n        fieldVector.insert(termIndex, scoreWithPrecision);\n      }\n      fieldVectors[fieldRef] = fieldVector;\n    }\n    this.fieldVectors = fieldVectors;\n  };\n\n  /**\n   * Creates a token set of all tokens in the index using lunr.TokenSet\n   *\n   * @private\n   */\n  lunr.Builder.prototype.createTokenSet = function () {\n    this.tokenSet = lunr.TokenSet.fromArray(Object.keys(this.invertedIndex).sort());\n  };\n\n  /**\n   * Builds the index, creating an instance of lunr.Index.\n   *\n   * This completes the indexing process and should only be called\n   * once all documents have been added to the index.\n   *\n   * @returns {lunr.Index}\n   */\n  lunr.Builder.prototype.build = function () {\n    this.calculateAverageFieldLengths();\n    this.createFieldVectors();\n    this.createTokenSet();\n    return new lunr.Index({\n      invertedIndex: this.invertedIndex,\n      fieldVectors: this.fieldVectors,\n      tokenSet: this.tokenSet,\n      fields: Object.keys(this._fields),\n      pipeline: this.searchPipeline\n    });\n  };\n\n  /**\n   * Applies a plugin to the index builder.\n   *\n   * A plugin is a function that is called with the index builder as its context.\n   * Plugins can be used to customise or extend the behaviour of the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied when building the index.\n   *\n   * The plugin function will be called with the index builder as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index builder as its context.\n   *\n   * @param {Function} plugin The plugin to apply.\n   */\n  lunr.Builder.prototype.use = function (fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    fn.apply(this, args);\n  };\n  /**\n   * Contains and collects metadata about a matching document.\n   * A single instance of lunr.MatchData is returned as part of every\n   * lunr.Index~Result.\n   *\n   * @constructor\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   * @property {object} metadata - A cloned collection of metadata associated with this document.\n   * @see {@link lunr.Index~Result}\n   */\n  lunr.MatchData = function (term, field, metadata) {\n    var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {});\n\n    // Cloning the metadata to prevent the original\n    // being mutated during match data combination.\n    // Metadata is kept in an array within the inverted\n    // index so cloning the data can be done with\n    // Array#slice\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n      clonedMetadata[key] = metadata[key].slice();\n    }\n    this.metadata = Object.create(null);\n    if (term !== undefined) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = clonedMetadata;\n    }\n  };\n\n  /**\n   * An instance of lunr.MatchData will be created for every term that matches a\n   * document. However only one instance is required in a lunr.Index~Result. This\n   * method combines metadata from another instance of lunr.MatchData with this\n   * objects metadata.\n   *\n   * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n   * @see {@link lunr.Index~Result}\n   */\n  lunr.MatchData.prototype.combine = function (otherMatchData) {\n    var terms = Object.keys(otherMatchData.metadata);\n    for (var i = 0; i < terms.length; i++) {\n      var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term]);\n      if (this.metadata[term] == undefined) {\n        this.metadata[term] = Object.create(null);\n      }\n      for (var j = 0; j < fields.length; j++) {\n        var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field]);\n        if (this.metadata[term][field] == undefined) {\n          this.metadata[term][field] = Object.create(null);\n        }\n        for (var k = 0; k < keys.length; k++) {\n          var key = keys[k];\n          if (this.metadata[term][field][key] == undefined) {\n            this.metadata[term][field][key] = otherMatchData.metadata[term][field][key];\n          } else {\n            this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key]);\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Add metadata for a term/field pair to this instance of match data.\n   *\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   */\n  lunr.MatchData.prototype.add = function (term, field, metadata) {\n    if (!(term in this.metadata)) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = metadata;\n      return;\n    }\n    if (!(field in this.metadata[term])) {\n      this.metadata[term][field] = metadata;\n      return;\n    }\n    var metadataKeys = Object.keys(metadata);\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n      if (key in this.metadata[term][field]) {\n        this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key]);\n      } else {\n        this.metadata[term][field][key] = metadata[key];\n      }\n    }\n  };\n  /**\n   * A lunr.Query provides a programmatic way of defining queries to be performed\n   * against a {@link lunr.Index}.\n   *\n   * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n   * so the query object is pre-initialized with the right index fields.\n   *\n   * @constructor\n   * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n   * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n   */\n  lunr.Query = function (allFields) {\n    this.clauses = [];\n    this.allFields = allFields;\n  };\n\n  /**\n   * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n   *\n   * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n   * concatenation.\n   *\n   * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n   *\n   * @constant\n   * @default\n   * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n   * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n   * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with trailing wildcard</caption>\n   * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n   * @example <caption>query term with leading and trailing wildcard</caption>\n   * query.term('foo', {\n   *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n   * })\n   */\n\n  lunr.Query.wildcard = new String(\"*\");\n  lunr.Query.wildcard.NONE = 0;\n  lunr.Query.wildcard.LEADING = 1;\n  lunr.Query.wildcard.TRAILING = 2;\n\n  /**\n   * Constants for indicating what kind of presence a term must have in matching documents.\n   *\n   * @constant\n   * @enum {number}\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with required presence</caption>\n   * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n   */\n  lunr.Query.presence = {\n    /**\n     * Term's presence in a document is optional, this is the default value.\n     */\n    OPTIONAL: 1,\n    /**\n     * Term's presence in a document is required, documents that do not contain\n     * this term will not be returned.\n     */\n    REQUIRED: 2,\n    /**\n     * Term's presence in a document is prohibited, documents that do contain\n     * this term will not be returned.\n     */\n    PROHIBITED: 3\n  };\n\n  /**\n   * A single clause in a {@link lunr.Query} contains a term and details on how to\n   * match that term against a {@link lunr.Index}.\n   *\n   * @typedef {Object} lunr.Query~Clause\n   * @property {string[]} fields - The fields in an index this clause should be matched against.\n   * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n   * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n   * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n   * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n   * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n   */\n\n  /**\n   * Adds a {@link lunr.Query~Clause} to this query.\n   *\n   * Unless the clause contains the fields to be matched all fields will be matched. In addition\n   * a default boost of 1 is applied to the clause.\n   *\n   * @param {lunr.Query~Clause} clause - The clause to add to this query.\n   * @see lunr.Query~Clause\n   * @returns {lunr.Query}\n   */\n  lunr.Query.prototype.clause = function (clause) {\n    if (!('fields' in clause)) {\n      clause.fields = this.allFields;\n    }\n    if (!('boost' in clause)) {\n      clause.boost = 1;\n    }\n    if (!('usePipeline' in clause)) {\n      clause.usePipeline = true;\n    }\n    if (!('wildcard' in clause)) {\n      clause.wildcard = lunr.Query.wildcard.NONE;\n    }\n    if (clause.wildcard & lunr.Query.wildcard.LEADING && clause.term.charAt(0) != lunr.Query.wildcard) {\n      clause.term = \"*\" + clause.term;\n    }\n    if (clause.wildcard & lunr.Query.wildcard.TRAILING && clause.term.slice(-1) != lunr.Query.wildcard) {\n      clause.term = \"\" + clause.term + \"*\";\n    }\n    if (!('presence' in clause)) {\n      clause.presence = lunr.Query.presence.OPTIONAL;\n    }\n    this.clauses.push(clause);\n    return this;\n  };\n\n  /**\n   * A negated query is one in which every clause has a presence of\n   * prohibited. These queries require some special processing to return\n   * the expected results.\n   *\n   * @returns boolean\n   */\n  lunr.Query.prototype.isNegated = function () {\n    for (var i = 0; i < this.clauses.length; i++) {\n      if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n   * to the list of clauses that make up this query.\n   *\n   * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n   * to a token or token-like string should be done before calling this method.\n   *\n   * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n   * array, each term in the array will share the same options.\n   *\n   * @param {object|object[]} term - The term(s) to add to the query.\n   * @param {object} [options] - Any additional properties to add to the query clause.\n   * @returns {lunr.Query}\n   * @see lunr.Query#clause\n   * @see lunr.Query~Clause\n   * @example <caption>adding a single term to a query</caption>\n   * query.term(\"foo\")\n   * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n   * query.term(\"foo\", {\n   *   fields: [\"title\"],\n   *   boost: 10,\n   *   wildcard: lunr.Query.wildcard.TRAILING\n   * })\n   * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n   * query.term(lunr.tokenizer(\"foo bar\"))\n   */\n  lunr.Query.prototype.term = function (term, options) {\n    if (Array.isArray(term)) {\n      term.forEach(function (t) {\n        this.term(t, lunr.utils.clone(options));\n      }, this);\n      return this;\n    }\n    var clause = options || {};\n    clause.term = term.toString();\n    this.clause(clause);\n    return this;\n  };\n  lunr.QueryParseError = function (message, start, end) {\n    this.name = \"QueryParseError\";\n    this.message = message;\n    this.start = start;\n    this.end = end;\n  };\n  lunr.QueryParseError.prototype = new Error();\n  lunr.QueryLexer = function (str) {\n    this.lexemes = [];\n    this.str = str;\n    this.length = str.length;\n    this.pos = 0;\n    this.start = 0;\n    this.escapeCharPositions = [];\n  };\n  lunr.QueryLexer.prototype.run = function () {\n    var state = lunr.QueryLexer.lexText;\n    while (state) {\n      state = state(this);\n    }\n  };\n  lunr.QueryLexer.prototype.sliceString = function () {\n    var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos;\n    for (var i = 0; i < this.escapeCharPositions.length; i++) {\n      sliceEnd = this.escapeCharPositions[i];\n      subSlices.push(this.str.slice(sliceStart, sliceEnd));\n      sliceStart = sliceEnd + 1;\n    }\n    subSlices.push(this.str.slice(sliceStart, this.pos));\n    this.escapeCharPositions.length = 0;\n    return subSlices.join('');\n  };\n  lunr.QueryLexer.prototype.emit = function (type) {\n    this.lexemes.push({\n      type: type,\n      str: this.sliceString(),\n      start: this.start,\n      end: this.pos\n    });\n    this.start = this.pos;\n  };\n  lunr.QueryLexer.prototype.escapeCharacter = function () {\n    this.escapeCharPositions.push(this.pos - 1);\n    this.pos += 1;\n  };\n  lunr.QueryLexer.prototype.next = function () {\n    if (this.pos >= this.length) {\n      return lunr.QueryLexer.EOS;\n    }\n    var char = this.str.charAt(this.pos);\n    this.pos += 1;\n    return char;\n  };\n  lunr.QueryLexer.prototype.width = function () {\n    return this.pos - this.start;\n  };\n  lunr.QueryLexer.prototype.ignore = function () {\n    if (this.start == this.pos) {\n      this.pos += 1;\n    }\n    this.start = this.pos;\n  };\n  lunr.QueryLexer.prototype.backup = function () {\n    this.pos -= 1;\n  };\n  lunr.QueryLexer.prototype.acceptDigitRun = function () {\n    var char, charCode;\n    do {\n      char = this.next();\n      charCode = char.charCodeAt(0);\n    } while (charCode > 47 && charCode < 58);\n    if (char != lunr.QueryLexer.EOS) {\n      this.backup();\n    }\n  };\n  lunr.QueryLexer.prototype.more = function () {\n    return this.pos < this.length;\n  };\n  lunr.QueryLexer.EOS = 'EOS';\n  lunr.QueryLexer.FIELD = 'FIELD';\n  lunr.QueryLexer.TERM = 'TERM';\n  lunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE';\n  lunr.QueryLexer.BOOST = 'BOOST';\n  lunr.QueryLexer.PRESENCE = 'PRESENCE';\n  lunr.QueryLexer.lexField = function (lexer) {\n    lexer.backup();\n    lexer.emit(lunr.QueryLexer.FIELD);\n    lexer.ignore();\n    return lunr.QueryLexer.lexText;\n  };\n  lunr.QueryLexer.lexTerm = function (lexer) {\n    if (lexer.width() > 1) {\n      lexer.backup();\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n    lexer.ignore();\n    if (lexer.more()) {\n      return lunr.QueryLexer.lexText;\n    }\n  };\n  lunr.QueryLexer.lexEditDistance = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.EDIT_DISTANCE);\n    return lunr.QueryLexer.lexText;\n  };\n  lunr.QueryLexer.lexBoost = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.BOOST);\n    return lunr.QueryLexer.lexText;\n  };\n  lunr.QueryLexer.lexEOS = function (lexer) {\n    if (lexer.width() > 0) {\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n  };\n\n  // This matches the separator used when tokenising fields\n  // within a document. These should match otherwise it is\n  // not possible to search for some tokens within a document.\n  //\n  // It is possible for the user to change the separator on the\n  // tokenizer so it _might_ clash with any other of the special\n  // characters already used within the search string, e.g. :.\n  //\n  // This means that it is possible to change the separator in\n  // such a way that makes some words unsearchable using a search\n  // string.\n  lunr.QueryLexer.termSeparator = lunr.tokenizer.separator;\n  lunr.QueryLexer.lexText = function (lexer) {\n    while (true) {\n      var char = lexer.next();\n      if (char == lunr.QueryLexer.EOS) {\n        return lunr.QueryLexer.lexEOS;\n      }\n\n      // Escape character is '\\'\n      if (char.charCodeAt(0) == 92) {\n        lexer.escapeCharacter();\n        continue;\n      }\n      if (char == \":\") {\n        return lunr.QueryLexer.lexField;\n      }\n      if (char == \"~\") {\n        lexer.backup();\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n        return lunr.QueryLexer.lexEditDistance;\n      }\n      if (char == \"^\") {\n        lexer.backup();\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n        return lunr.QueryLexer.lexBoost;\n      }\n\n      // \"+\" indicates term presence is required\n      // checking for length to ensure that only\n      // leading \"+\" are considered\n      if (char == \"+\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      }\n\n      // \"-\" indicates term presence is prohibited\n      // checking for length to ensure that only\n      // leading \"-\" are considered\n      if (char == \"-\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      }\n      if (char.match(lunr.QueryLexer.termSeparator)) {\n        return lunr.QueryLexer.lexTerm;\n      }\n    }\n  };\n  lunr.QueryParser = function (str, query) {\n    this.lexer = new lunr.QueryLexer(str);\n    this.query = query;\n    this.currentClause = {};\n    this.lexemeIdx = 0;\n  };\n  lunr.QueryParser.prototype.parse = function () {\n    this.lexer.run();\n    this.lexemes = this.lexer.lexemes;\n    var state = lunr.QueryParser.parseClause;\n    while (state) {\n      state = state(this);\n    }\n    return this.query;\n  };\n  lunr.QueryParser.prototype.peekLexeme = function () {\n    return this.lexemes[this.lexemeIdx];\n  };\n  lunr.QueryParser.prototype.consumeLexeme = function () {\n    var lexeme = this.peekLexeme();\n    this.lexemeIdx += 1;\n    return lexeme;\n  };\n  lunr.QueryParser.prototype.nextClause = function () {\n    var completedClause = this.currentClause;\n    this.query.clause(completedClause);\n    this.currentClause = {};\n  };\n  lunr.QueryParser.parseClause = function (parser) {\n    var lexeme = parser.peekLexeme();\n    if (lexeme == undefined) {\n      return;\n    }\n    switch (lexeme.type) {\n      case lunr.QueryLexer.PRESENCE:\n        return lunr.QueryParser.parsePresence;\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n      default:\n        var errorMessage = \"expected either a field or a term, found \" + lexeme.type;\n        if (lexeme.str.length >= 1) {\n          errorMessage += \" with value '\" + lexeme.str + \"'\";\n        }\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n  };\n  lunr.QueryParser.parsePresence = function (parser) {\n    var lexeme = parser.consumeLexeme();\n    if (lexeme == undefined) {\n      return;\n    }\n    switch (lexeme.str) {\n      case \"-\":\n        parser.currentClause.presence = lunr.Query.presence.PROHIBITED;\n        break;\n      case \"+\":\n        parser.currentClause.presence = lunr.Query.presence.REQUIRED;\n        break;\n      default:\n        var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\";\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n    var nextLexeme = parser.peekLexeme();\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term or field, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n      default:\n        var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n  lunr.QueryParser.parseField = function (parser) {\n    var lexeme = parser.consumeLexeme();\n    if (lexeme == undefined) {\n      return;\n    }\n    if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n      var possibleFields = parser.query.allFields.map(function (f) {\n          return \"'\" + f + \"'\";\n        }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields;\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n    parser.currentClause.fields = [lexeme.str];\n    var nextLexeme = parser.peekLexeme();\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n      default:\n        var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n  lunr.QueryParser.parseTerm = function (parser) {\n    var lexeme = parser.consumeLexeme();\n    if (lexeme == undefined) {\n      return;\n    }\n    parser.currentClause.term = lexeme.str.toLowerCase();\n    if (lexeme.str.indexOf(\"*\") != -1) {\n      parser.currentClause.usePipeline = false;\n    }\n    var nextLexeme = parser.peekLexeme();\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n  lunr.QueryParser.parseEditDistance = function (parser) {\n    var lexeme = parser.consumeLexeme();\n    if (lexeme == undefined) {\n      return;\n    }\n    var editDistance = parseInt(lexeme.str, 10);\n    if (isNaN(editDistance)) {\n      var errorMessage = \"edit distance must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n    parser.currentClause.editDistance = editDistance;\n    var nextLexeme = parser.peekLexeme();\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n  lunr.QueryParser.parseBoost = function (parser) {\n    var lexeme = parser.consumeLexeme();\n    if (lexeme == undefined) {\n      return;\n    }\n    var boost = parseInt(lexeme.str, 10);\n    if (isNaN(boost)) {\n      var errorMessage = \"boost must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n    parser.currentClause.boost = boost;\n    var nextLexeme = parser.peekLexeme();\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  }\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */;\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr;\n  });\n})();","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (isProduction) {\n    throw new Error(prefix);\n  }\n  var provided = typeof message === 'function' ? message() : message;\n  var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n  throw new Error(value);\n}\nexport { invariant as default };","import { useMemo } from 'react';\nimport { Index } from 'lunr';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\nvar useLunr = function useLunr(query, rawIndex, rawStore) {\n  var index = useMemo(function () {\n    if (rawIndex === undefined || rawIndex === null) {\n      process.env.NODE_ENV !== \"production\" ? warning(rawIndex !== undefined && rawIndex !== null, 'No index was provided. Results will always be empty.') : void 0;\n      return;\n    }\n    if (rawIndex instanceof Index) return rawIndex;\n    if (typeof rawIndex === 'string') return Index.load(JSON.parse(rawIndex));\n    if (typeof rawIndex === 'object') return Index.load(rawIndex);\n    process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid index provided. Please provide an instance of Lunr.Index or exported JSON or string index.') : invariant(false);\n  }, [rawIndex]);\n  var store = useMemo(function () {\n    if (typeof rawStore === 'string') return JSON.parse(rawStore);\n    return rawStore;\n  }, [rawStore]);\n  return useMemo(function () {\n    if (!query || !index) return [];\n    var results = typeof query === 'string' ? index.search(query) : index.query(query);\n    if (store) return results.map(function (_ref) {\n      var ref = _ref.ref;\n      return store[ref];\n    });\n    return results;\n  }, [query, index, store]);\n};\nexport { useLunr };","import React, {useEffect, useState} from \"react\"\nimport {FaArrowDown} from \"react-icons/fa\";\n\nconst Accordion = ({title, seccion, articulos, children, alwaysOpen}) => {\n    const [isOpen, setOpen] = useState(false);\n\n    useEffect(() => {\n        setOpen(alwaysOpen)\n    }, [alwaysOpen])\n\n    return (\n        <div className=\"border-l-2 border-transparent\">\n            <header\n                className={`flex justify-between items-center p-2 pl-5 pr-5 cursor-pointer select-none accordion-title ${alwaysOpen || isOpen ? \"open text-gray-700 font-bold\" : \"\"}`}\n                onClick={() => setOpen(!isOpen)}>\n                <div className=\"flex w-4/5 flex-col\">\n                    <span className={`w-full text-md ${alwaysOpen || isOpen ? \"text-gray-800\" : \"text-gray-600\"}`}>\n                       {title}\n                    </span>\n                    <span className=\"w-full\"><span className=\"text-sm\">{seccion}</span><span\n                        className=\"text-xs\"> ({articulos})</span></span>\n                </div>\n                <div\n                    className=\"text-gray-500 rounded-full border  w-7 h-7 flex items-center justify-center\">\n                    <FaArrowDown/>\n                </div>\n            </header>\n            <div className={`accordion-item ${!isOpen ? \"collapsed\" : \"\"}`}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Accordion","import React, {useState} from \"react\"\nimport {Link} from \"gatsby\"\n\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {useLunr} from \"react-lunr\";\nimport Accordion from \"../components/accordion\";\n\nfunction replaceAccents(text) {\n    return text.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n}\n\nconst IndexPage = ({data}) => {\n\n    const index = data.localSearchArticulos.index\n    const store = data.localSearchArticulos.store\n    const indice = data.indice\n\n\n    const secciones_desc = {}\n    const capitulos_desc = {}\n    const secciones = [...new Set(indice.nodes.map(node => {\n        secciones_desc[node.NRO_SECCION] = node.DESC_SECCION\n        capitulos_desc[node.NRO_SECCION] = {}\n        return node.NRO_SECCION\n    }))];\n    const secc_articulos = secciones.map((seccion) => {\n        const arts = indice.nodes.filter(node => node.NRO_SECCION === seccion).map(node => {\n            capitulos_desc[seccion][node.NRO_CAPITULO] = node.DESC_CAPITULO\n            return node.NRO_CAPITULO\n        })\n        const cap = [...new Set(arts)]\n        return {\n            seccion: seccion,\n            captitulos: cap,\n            cant_articulos: arts.length\n        }\n    })\n\n    const [query, setQuery] = useState('')\n    const [querySinAcento, setQuerySinAcento] = useState('')\n    const results = useLunr(querySinAcento, index, store)\n    const results_array = results.map(result => result.numeroArticulo)\n\n    /*  const word_count = JSON.parse(index).invertedIndex.map((entry) => {\n          let text = entry[0]\n          let value = Object.keys(entry[1].textoModificado).length\n          return {text, value}\n      }).filter(({text,value})=> value>10)\n      console.log(word_count)*/\n\n\n    return (\n        <Layout>\n            <SEO title=\"Todos los artículos\"/>\n\n\n            <p className=\"w-100 text-center text-gray-500 text-sm md:text-lg lg:w-2/3 mx-auto\">\n                Esta es una comparación basada en datos del proyecto de Ley de Bases y Puntos de\n                Partida para la Libertad de los Argentinos (actualizado al 10 de abril de 2024)</p>\n\n            <div className=\"mx-auto p-5 w-100 lg:w-1/2 \">\n                <input\n                    placeholder={\"Buscá por palabra o elegí de la lista\"}\n                    className=\"mx-auto w-full h-12 bg-blanco border-gray-300 border-0 border-b text-gray-500 focus:outline-none focus:ring focus:border-blue-300 p-2 placeholder-gray-700\"\n                    name=\"query\"\n                    value={query}\n                    onChange={(event) => {\n                        setQuery(event.target.value)\n                        setQuerySinAcento(replaceAccents(event.target.value))\n                    }}\n                />\n            </div>\n\n            <section className=\"shadow text-gray-500\">\n                {secc_articulos.map(({seccion, cant_articulos, captitulos}) => {\n                        const secciones_filtradas = indice.nodes.filter(art => (\n                            (results_array.length <= 0 || results_array.includes(art.NRO_ARTICULO.toString())) &&\n                            (art.NRO_SECCION === seccion)))\n                        return secciones_filtradas.length > 0 ? (\n                            <article key={seccion} className=\"border-b\">\n                                <Accordion seccion={\"SECCIÓN \" + seccion} articulos={\n                                    results.length > 0 ?\n                                        (`artículos con \"${query}\"`) :\n                                        (`${cant_articulos} artículos`)\n                                } title={secciones_desc[seccion]} alwaysOpen={results.length > 0}>\n                                    {captitulos.map((capitulo) => {\n                                        const capitulos_filtrados = secciones_filtradas.filter(art => (art.NRO_CAPITULO === capitulo))\n                                        return capitulos_filtrados.length > 0 ? (\n                                            <div key={capitulo} className=\"py-2 pl-4\">\n                                                <h4 className=\"mb-2\">CAPÍTULO {capitulo} - {capitulos_desc[seccion][capitulo]}</h4>\n                                                {capitulos_filtrados.map((art) => (\n                                                    <ul key={\"artt_\" + art.NRO_ARTICULO} className=\"pl-4 py-0.5\">\n                                                        <li key={art.NRO_ARTICULO}>\n                                                            <Link\n                                                                className=\"text-gray-600\"\n                                                                to={art.NRO_ARTICULO.toString()}>\n                                                                {art.DESC_ARTICULO ? `${art.DESC_ARTICULO}` : ''}</Link>\n                                                        </li>\n                                                    </ul>\n                                                ))}\n                                            </div>\n                                        ) : (<div className=\"hidden\"></div>)\n                                    })}\n                                </Accordion>\n                            </article>\n                        ) : (<div></div>)\n                    }\n                )}\n            </section>\n        </Layout>\n    )\n\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query {\n        articulos: allLucJson {\n            nodes {\n                numeroArticulo\n            }\n        }\n        localSearchArticulos {\n            index\n            store\n        }\n        indiceSeccion: allIndiceYaml {\n            group(field: NRO_SECCION) {\n                fieldValue\n                totalCount\n                nodes {\n                    NRO_CAPITULO\n                }\n            }\n        }\n        indiceCapitulo: allIndiceYaml {\n            group(field: NRO_CAPITULO) {\n                fieldValue\n                totalCount\n                nodes {\n                    NRO_SECCION\n                }\n            }\n        }\n        indice: allIndiceYaml {\n            nodes {\n                NRO_CAPITULO\n                DESC_CAPITULO\n                NRO_ARTICULO\n                DESC_ARTICULO\n                NRO_SECCION\n                DESC_SECCION\n            }\n        }\n    }\n\n                    `\n"],"sourceRoot":""}